<!DOCTYPE html>
<!-- saved from url=(0057)https://cgi.cse.unsw.edu.au/~cs2041/19T2/tut/03/questions -->
<html lang="en" class="gr__cgi_cse_unsw_edu_au"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta content="width=device-width, initial-scale=1, shrink-to-fit=no" name="viewport">
<title>

COMP2041 Week 03 Tutorial Questions

</title>
<!-- <link href="/~cs2041/19T2/flask.cgi/static/bootstrap.min.css" rel="stylesheet"> -->
<link crossorigin="anonymous" href="./COMP2041 Week 03 Tutorial Questions_files/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" rel="stylesheet">
<link href="./COMP2041 Week 03 Tutorial Questions_files/course.css" rel="stylesheet">
<!-- <script type="text/javascript" src="/~cs2041/19T2/flask.cgi/static/jquery.min.js"></script> -->
<!-- <script type="text/javascript" src="/~cs2041/19T2/flask.cgi/static/bootstrap.min.js"></script> -->
<script src="./COMP2041 Week 03 Tutorial Questions_files/jquery-3.3.1.min.js"></script>
<script src="./COMP2041 Week 03 Tutorial Questions_files/popper.min.js"></script>
<script crossorigin="anonymous" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" src="./COMP2041 Week 03 Tutorial Questions_files/bootstrap.min.js"></script>
<script src="./COMP2041 Week 03 Tutorial Questions_files/course.js" type="text/javascript"></script>
<!-- prism code-highligting -->
<link href="./COMP2041 Week 03 Tutorial Questions_files/prism.css" rel="stylesheet">
<!-- defer loading of prism.js script until DOM is loaded, as per PR #26 and https://stackoverflow.com/a/24070373 -->
<script defer="" src="./COMP2041 Week 03 Tutorial Questions_files/prism.js" type="text/javascript"></script>
<script async="" src="./COMP2041 Week 03 Tutorial Questions_files/ei.js"></script>
<link href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/" rel="canonical">
</head>
<body class="container" data-gr-c-s-loaded="true">
<div class="row" id="heading">
<div class="col-3 text-left">
<a class="heading_link" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/" id="left_heading_link" target="_blank">COMP(2041|9044) 19T2</a>
</div>
<div class="col-6 text-center">
<span class="dropdown">
<button aria-expanded="false" aria-haspopup="true" class="btn btn-lg btn-link dropdown-toggle heading_button" data-toggle="dropdown" id="week-selector" type="button">
        Week 03 <span class="caret"></span>
</button>
<div aria-labelledby="week-selector" class="dropdown-menu">
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/tut/01/questions">Week 01</a>
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/tut/02/questions">Week 02</a>
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/tut/03/questions">Week 03</a>
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/tut/04/questions">Week 04</a>
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/tut/05/questions">Week 05</a>
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/tut/06/questions">Week 06</a>
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/tut/07/questions">Week 07</a>
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/tut/08/questions">Week 08</a>
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/tut/09/questions">Week 09</a>
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/tut/10/questions">Week 10</a>
</div>
</span>
<span class="dropdown">
<button aria-expanded="false" aria-haspopup="true" class="btn btn-lg btn-link dropdown-toggle heading_button" data-toggle="dropdown" id="tlb-selector" type="button">
        Tutorial <span class="caret"></span>
</button>
<div aria-labelledby="tlb-selector" class="dropdown-menu">
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/tut/03/questions">Tutorial</a>
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/lab/03/questions">Laboratory</a>
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/test/03/questions">Weekly Test</a>
</div>
</span>
<span class="dropdown">
<button aria-expanded="false" aria-haspopup="true" class="btn btn-lg btn-link dropdown-toggle heading_button" data-toggle="dropdown" id="qa-selector" type="button">
        Questions <span class="caret"></span>
</button>
<div aria-labelledby="qa-selector" class="dropdown-menu">
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/tut/03/questions">Questions</a>
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/tut/03/answers">Sample Answers</a>
</div>
</span>
</div>
<div class="col-3 text-right">
<a class="heading_link" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/" id="right_heading_link" target="_blank">COMP(2041|9044) 19T2</a>
</div>
</div>
<div class="tutlab tut">
<ol>
<li>
<!-- question courtesy Nelson Rigby  -->
COMP2041 student Nelson wrote this script named <b>start_lab03.sh</b> to run before the Week 3 lab.

<pre class="command_line">#!/bin/sh
cd ~/labs/03
ex1=jpg2png
ex2=email_image
ex3=date_image
ex4=tag_music
</pre>

But when he ran his script, it didn't seem to work:

<pre class="command_line"><kbd class="shell">pwd</kbd>
/home/z1234567
<kbd class="shell">./start_lab03.sh</kbd>
<kbd class="shell">pwd</kbd>
/home/z1234567
<kbd class="shell">echo $ex1 $ex2 $ex3 $ex4</kbd>

</pre>

Why not, and can you fix the shell script?

<div></div>
</li><li>
The course code for COMP2041 has been changed to COMP2042 and
the course code for COMP9044 has been changed to COMP9042.
Write a shell script, <code>update_course_code.sh</code> which
appropriately changes the course_code in all the files it is given as arguments.

<div></div>
</li><li>
Modify  <code>update_course_code.sh</code> so if given a directory as
argument it updates the course codes in files found in that directory and  its sub-directories.

<div></div>
</li><li>
Write a shell script, <code>is_business_hours</code> which exits with a status of 0
if the current time is between 9am &amp; 5pm, and otherwise  exits with a status of 1.
<p>
Hint: the date command prints the current time in a format like this:
</p><pre class="command_line"><kbd class="shell">date</kbd>
Sun Mar 18 12:57:08 EST 2012
</pre>
<div></div>
<!-- Questions below courtesy Michael Zhou -->
</li><li>
CSE systems have a command, <code>mlalias</code>, which
prints information about a specified mail alias.  For example:
<p>
</p><pre class="command_line"><kbd class="shell">mlalias COMP2041-list</kbd>
        alias: COMP2041-list
  description: Udb alias list
    addresses:
               z5000000
               z5000001
               .......
               z5555555
               andrewt
       owners: udb, cs2041
authorised posters: @Employee, @Subject_Utility, @Wheel
    Moderator: udb
       Status: system, closed, moderated, virtual, and public
</pre>
Convert the output of the mlalias command into a new line separated list
of CSE usernames, like this:
<p>
</p><pre class="command_line">z5000000
z5000001
.......
z5555555
andrewt
</pre>
<div></div>
</li><li>
CSE system have a command, <code>acc</code>, which
prints information about a specified user.  For example:

<pre class="command_line"><kbd class="shell">acc z5555555</kbd>
            User Name : z5555555              Aliases :
                  Uid : 25068
               Groups :
              Expires : 31 Dec 2019
         User classes : 3978_Student, COMP2041_Student[15dec2019]
                      : COMP2121_Student[15dec2019], COMP2511_Student[15dec2019]
                      : COMP1511_Tutor[16dec2019], COMP3900_Student[15dec2019]
                 Name : Michael Yang Zhou
Password last changed : 2019/03/02.21:23:19
       Home Directory : /import/adams/1/mzhou
                Name : Mr Zhou, Michael Yang (Michael Yang Zhou)
            Position : UGRD (Faculty of Engineering)
         UNSW Number : 5555555
           UNSW Mail : z5555555@unsw.edu.au
           UNSW Home : //INFPWFS219.ad.unsw.edu.au/Student038$/z5555555
            CSE Home : /import/kamen/3/z5555555
</pre>

Write a pipeline which converts the output of acc into a new line separated list of
courses the person is enrolled in, like this:

<pre class="command_line">COMP2041
COMP2121
COMP2511
COMP3900
</pre>

Make sure you don't include COMP1511 which Michael tutors.

<div></div>
</li><li><p>
Use the pipeines from the above 2 questions to write shell commands which
print a list of courses taken by COMP2041 students with counts of how
many COMP2041 students take each, like this:

</p><pre class="command_line">     55 COMP2911
     37 COMP2121
     17 COMP3311
     10 COMP2111
      9 COMP3331
      ..........
</pre>
<div></div>
</li><li>
<!-- question courtesy Nelson Rigby  -->
COMP2041 student Shruti has a 'friends' subdirectory in her home directory
that contains images of her many friends.  Shruti likes to view these images
often and would like to have them appear in other directories within
her CSE account so she has written a shell script to symbolically link
them to the current directory:
<p>
</p><pre class="command_line">for image_file in `ls ~/friends`
do
    ln -s "~/friends/$image_file" .
done
</pre>
<p>
The links created by Shruti's script are broken.
Why? How can she fix her script?
</p><p>
</p><div></div>
</li><li>
Write a shell script named <code>is_prime.sh</code>
which given an integer as argment, tests whether
it is prime and prints a suitable message:
<pre class="command_line"><kbd class="shell">is_prime.sh 42</kbd>
42 is not prime
<kbd class="shell">is_prime.sh 113</kbd>
113 is prime
</pre>
Your script should  exit with a non-zero exit status if its
argument is not prime.
<p>
Write a second script named <code>primes.sh</code> which uses the first
script to print all primes less than a specified value, e.g:
</p><p>
</p><pre class="command_line"><kbd class="shell">primes.sh 100</kbd>
2
3
5
7
11
13
17
...
79
83
89
97
</pre>
<div></div>
<h3>Revision questions</h3>

The remaining tutorial questions are primarily intended for revision - either this week
or later in session.
<p>
Your tutor may still choose to cover some of the questions time permitting.
</p><p>
</p></li><li>
<!-- question courtesy Nelson Rigby  -->
COMP2041 student  Big Bad Barry tries to impress a girl
at a party by betting her she can't work out what this shell script:
<p>
</p><pre class="command_line">#!/bin/sh
IFS=abc
echo "$*"
</pre>
<p>
prints when run like this:
</p><pre class="command_line"><kbd class="shell">./script.sh mount inside</kbd>
</pre><p>
What does the script print?
</p><p>
Will the girl go out with  Big Bad Barry?
</p><p>
</p><div></div>
</li></ol>
</div>
<footer class="mt-3 container text-center no-print">
<p class="text-muted">
<strong>COMP(2041|9044) 19T2: Software Construction</strong>
is brought to you by <br>
the <a href="https://www.cse.unsw.edu.au/">School of Computer Science and Engineering</a>
at the <a href="https://www.unsw.edu.au/">University of New South Wales</a>, Sydney.<br>
For all enquiries, please email the class account at
<a href="mailto:@cse.unsw.edu.au">cs2041@cse.unsw.edu.au</a><br>
<small>CRICOS Provider 00098G</small>
</p>
</footer>

</body></html>