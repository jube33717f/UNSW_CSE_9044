<!DOCTYPE html>
<!-- saved from url=(0058)https://cgi.cse.unsw.edu.au/~cs2041/19T2/test/08/questions -->
<html lang="en" class="gr__cgi_cse_unsw_edu_au"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta content="width=device-width, initial-scale=1, shrink-to-fit=no" name="viewport">
<title>

COMP2041 Week 08 Weekly Test Questions

</title>
<!-- <link href="/~cs2041/19T2/flask.cgi/static/bootstrap.min.css" rel="stylesheet"> -->
<link crossorigin="anonymous" href="./COMP2041 Week 08 Weekly Test Questions_files/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" rel="stylesheet">
<link href="./COMP2041 Week 08 Weekly Test Questions_files/course.css" rel="stylesheet">
<!-- <script type="text/javascript" src="/~cs2041/19T2/flask.cgi/static/jquery.min.js"></script> -->
<!-- <script type="text/javascript" src="/~cs2041/19T2/flask.cgi/static/bootstrap.min.js"></script> -->
<script src="./COMP2041 Week 08 Weekly Test Questions_files/jquery-3.3.1.min.js"></script>
<script src="./COMP2041 Week 08 Weekly Test Questions_files/popper.min.js"></script>
<script crossorigin="anonymous" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" src="./COMP2041 Week 08 Weekly Test Questions_files/bootstrap.min.js"></script>
<script src="./COMP2041 Week 08 Weekly Test Questions_files/course.js" type="text/javascript"></script>
<!-- prism code-highligting -->
<link href="./COMP2041 Week 08 Weekly Test Questions_files/prism.css" rel="stylesheet">
<!-- defer loading of prism.js script until DOM is loaded, as per PR #26 and https://stackoverflow.com/a/24070373 -->
<script defer="" src="./COMP2041 Week 08 Weekly Test Questions_files/prism.js" type="text/javascript"></script>
<script async="" src="./COMP2041 Week 08 Weekly Test Questions_files/ei.js"></script>
<link href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/" rel="canonical">
</head>
<body class="container" data-gr-c-s-loaded="true">
<div class="row" id="heading">
<div class="col-3 text-left">
<a class="heading_link" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/" id="left_heading_link" target="_blank">COMP(2041|9044) 19T2</a>
</div>
<div class="col-6 text-center">
<span class="dropdown">
<button aria-expanded="false" aria-haspopup="true" class="btn btn-lg btn-link dropdown-toggle heading_button" data-toggle="dropdown" id="week-selector" type="button">
        Week 08 <span class="caret"></span>
</button>
<div aria-labelledby="week-selector" class="dropdown-menu">
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/test/03/questions">Week 03</a>
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/test/04/questions">Week 04</a>
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/test/05/questions">Week 05</a>
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/test/06/questions">Week 06</a>
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/test/07/questions">Week 07</a>
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/test/08/questions">Week 08</a>
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/test/09/questions">Week 09</a>
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/test/10/questions">Week 10</a>
</div>
</span>
<span class="dropdown">
<button aria-expanded="false" aria-haspopup="true" class="btn btn-lg btn-link dropdown-toggle heading_button" data-toggle="dropdown" id="tlb-selector" type="button">
        Weekly Test <span class="caret"></span>
</button>
<div aria-labelledby="tlb-selector" class="dropdown-menu">
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/tut/08/questions">Tutorial</a>
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/lab/08/questions">Laboratory</a>
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/test/08/questions">Weekly Test</a>
</div>
</span>
<span class="dropdown">
<button aria-expanded="false" aria-haspopup="true" class="btn btn-lg btn-link dropdown-toggle heading_button" data-toggle="dropdown" id="qa-selector" type="button">
        Questions <span class="caret"></span>
</button>
<div aria-labelledby="qa-selector" class="dropdown-menu">
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/test/08/questions">Questions</a>
<a class="dropdown-item" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/test/08/answers">Sample Answers</a>
</div>
</span>
</div>
<div class="col-3 text-right">
<a class="heading_link" href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/" id="right_heading_link" target="_blank">COMP(2041|9044) 19T2</a>
</div>
</div>
<div class="tutlab lab">
<h3>Test Conditions</h3>

These questions must be completed under self-administered exam-like conditions.
<p>
You must time the test yourself and ensure you comply with the conditions below.

</p><ul>
<li> You may complete this test in CSE labs or elsewhere using your own machine
</li><li> You may complete this test at any time before <b>Thursday 01 August 21:59:59</b>
</li><li> The maximum time allowed for this test is 1 hour + 5 minutes reading time.
</li><li> You may first use 5 minutes to read the questions (no typing)
</li><li> You then must complete the test within 1 hour and submit your answers with give.
</li><li> You must complete the questions alone - you can not get help in any way from any person.
</li><li> You can not access your previous answers to lab or tut questions.
</li><li> You can not access web pages or use the internet in any way.
</li><li> You can not access books, notes or other written or online materials.
</li><li> You can not access your own files, programs, code ...
</li><li> You can not access COMP2041 course materials except for language documentation linked below.
</li></ul>
<hr>
You may access this <b>language documentation</b> while attemting this test:
<ul>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/19T2//resources/shell_perl_cheatsheet.pdf">Shell/Regex/Perl quick reference</a>
</li><li><a href="https://cgi.cse.unsw.edu.au/~cs2041/19T2//resources/wsu-js-cheat-sheet.pdf">Javascript quick reference</a>
</li><li><a href="https://cgi.cse.unsw.edu.au/~cs2041/doc/perldoc-html-5.14.0/index.html">full Perl documentation</a>
</li><li><a href="https://cgi.cse.unsw.edu.au/~cs2041/19T2//resources/python_cheatsheet.pdf">Python quick reference</a>
</li><li><a href="https://cgi.cse.unsw.edu.au/~cs2041/19T2//resources/c-reference.pdf">C quick reference</a>
</li><li><a href="https://cgi.cse.unsw.edu.au/~cs2041/doc/python-3.6.6-docs-html/index.html">full Python 3.6 documentation</a>
</li></ul>
<hr>

You may also access manual entries (the man command)



Any violation of the test conditions will results in a mark of zero for the entire weekly test component.




    
         


    


<div class="card">
<div class="card-header">
<h3 class="card-title">
                Print Your Median Argument
            </h3>
</div>
<div class="card-body">










Write a Perl program <b>median_number.pl</b> that given positive
integers as command line arguments prints the median (middle) value.
<p>
Your program can assume is given an odd number of arguments.
</p><p>
Your program can assume all its arguments are positive integers.
</p><p>
For example:


    
        
    





</p><pre class="command_line" style="max-height: 32em;overflow:  auto;"><kbd class="shell">./median_number.pl 1 333 42</kbd>
42
<kbd class="shell">./median_number.pl 3 4 2 1 7 6 5</kbd>
4
<kbd class="shell">./median_number.pl 15 15 8 11 8</kbd>
11
<kbd class="shell">./median_number.pl 42 42 244 244 42</kbd>
42
</pre>
<p>
When you think your program is working you can  <code>autotest</code> to run some simple automated tests:

</p><pre class="command_line"><kbd class="shell">2041 autotest median_number</kbd>
</pre>


















When you are finished working  on this exercise you must submit
your work by running <b>give</b>:

<pre class="command_line"><kbd class="shell">give cs2041 test08_median_number median_number.pl</kbd>
</pre>
</div>
</div>
<div class="card">
<div class="card-header">
<h3 class="card-title">
                List Identical Files in Shell
            </h3>
</div>
<div class="card-body">









Write a Shell program, <b>ls_identical.sh</b> which takes the pathnames of 2 directories as argument.
<p>
It should print in alphabetical order  the names of all files which occur in both directories and have exactly the same contents.
</p><p>
Files must have the same name in both directories and the same contents for their name to be printed.
</p><p>
Do not print the names of files with same contents but different names in both directories.
</p><p>
For example:


    
        
    





</p><pre class="command_line" style="max-height: 32em;overflow:  auto;"><kbd class="shell">ls_identical.1.sh directory1 directory2</kbd>
</pre>


You can assume file names do not start with '.'.
<p>
Your answer must be Shell. You can  not use other languages such as Perl, Python or C.
</p><p>
No error checking is necessary.





</p><p>
When you think your program is working you can  <code>autotest</code> to run some simple automated tests:

</p><pre class="command_line"><kbd class="shell">2041 autotest shell_ls_identical</kbd>
</pre>


















When you are finished working  on this exercise you must submit
your work by running <b>give</b>:

<pre class="command_line"><kbd class="shell">give cs2041 test08_shell_ls_identical ls_identical.sh</kbd>
</pre>
</div>
</div>
<div class="card">
<div class="card-header">
<h3 class="card-title">
                List Identical Files in Perl
            </h3>
</div>
<div class="card-body">









Write a Perl program, <b>ls_identical.pl</b> which takes the pathnames of 2 directories as argument.
<p>
It should print in alphabetical order  the names of all files which occur in both directories and have exactly the same contents.
</p><p>
Files must have the same name in both directories and the same contents for their name to be printed.
</p><p>
Do not print the names of files with same contents but different names in both directories.
</p><p>
For example:


    
        
    





</p><pre class="command_line" style="max-height: 32em;overflow:  auto;"><kbd class="shell">mkdir directory1 directory2</kbd>
<kbd class="shell">echo hello &gt;directory1/same.txt</kbd>
<kbd class="shell">echo hello &gt;directory2/same.txt</kbd>
<kbd class="shell">echo hello &gt;directory1/different.txt</kbd>
<kbd class="shell">echo world &gt;directory2/different.txt</kbd>
<kbd class="shell">echo hello &gt;directory1/one.txt</kbd>
<kbd class="shell">echo hello &gt;directory2/two.txt</kbd>
<kbd class="shell">touch directory1/empty.txt directory2/empty.txt</kbd>
<kbd class="shell">ls directory1</kbd>
different.txt
empty.txt
one.txt
same.txt
<kbd class="shell">ls directory2</kbd>
different.txt
empty.txt
same.txt
two.txt
<kbd class="shell">ls_identical.pl directory1 directory2</kbd>
empty.txt
same.txt
</pre>


You can assume file names do not start with '.'.
<p>
Your answer must be Perl only.  You can not use other languages such as Shell, Python or C.
</p><p>
You may not run external programs, e.g. via system or backquotes.  for example, you can't run <code>diff</code>.
</p><p>
You may  use any Perl module installed on CSE systems.
</p><p>
No error checking is necessary.





</p><p>
When you think your program is working you can  <code>autotest</code> to run some simple automated tests:

</p><pre class="command_line"><kbd class="shell">2041 autotest perl_ls_identical</kbd>
</pre>


















When you are finished working  on this exercise you must submit
your work by running <b>give</b>:

<pre class="command_line"><kbd class="shell">give cs2041 test08_perl_ls_identical ls_identical.pl</kbd>
</pre>
</div>
</div>
<div class="card">
<div class="card-header">
<h3 class="card-title">
                Submission
            </h3>
</div>
<div class="card-body">


When you are finished each exercise make sure you submit your work by running <b>give</b>.
<p>
You can run <b>give</b> multiple times.
Only your last submission will be marked.
</p><p>
Don't submit any exercises you haven't attempted.
</p><p>
If you are working at home, you may find it more convenient
to upload your work via
 <a href="https://cgi.cse.unsw.edu.au/~give/code/login.php?app=/~give/Student/give.php&amp;debug=get_authuser">give's web interface</a>.
</p><p>

Remember you have until
<b>Thursday 01 August 21:59:59</b>
to complete this test.
</p><p>
Automarking will be run by the lecturer several days after the submission deadline
for the test, using test cases that you haven't seen:
different to the test cases <code><kbd>autotest</kbd></code> runs for
you.
</p><p>
(Hint: do your own testing as well as running
<code><kbd>autotest</kbd></code>)
</p><p>
After automarking is run by the lecturer you can
<a href="https://cgi.cse.unsw.edu.au/~cs2041/19T2/student/">view it here</a>
the resulting mark will also be available via
<a href="https://cgi.cse.unsw.edu.au/~give/Student/sturec.php">via give's web interface</a>
</p><p>
</p></div>
</div>



The test exercises for each week are worth in total 1 mark.
<p>
The best 6 of your 8 test marks for weeks 3-10 will be summed to give you a mark out of 6.



</p></div>
<footer class="mt-3 container text-center no-print">
<p class="text-muted">
<strong>COMP(2041|9044) 19T2: Software Construction</strong>
is brought to you by <br>
the <a href="https://www.cse.unsw.edu.au/">School of Computer Science and Engineering</a>
at the <a href="https://www.unsw.edu.au/">University of New South Wales</a>, Sydney.<br>
For all enquiries, please email the class account at
<a href="mailto:@cse.unsw.edu.au">cs2041@cse.unsw.edu.au</a><br>
<small>CRICOS Provider 00098G</small>
</p>
</footer>

</body></html>